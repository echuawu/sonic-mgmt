{
  "author": "system-sw-dev-ops-support@mellanox.com",
  "notify": "GERRIT_PATCHSET_UPLOADER_EMAIL,GERRIT_CHANGE_OWNER_EMAIL,NBU-sw-ci-sonic@nvidia.com,bcc:NBU-system-sw-dev-ops-support@exchange.nvidia.com",
  "timeout": "5",
  "control_file": "/auto/sw_system_project/devops/sw-r2d2-bot/ngci_control_files/sonic_mgmt_control_file.yaml",
  "properties": [
    "default_propertiesFile=/auto/sw_system_release/ci/general/ngci_properties_v2/swfw_default_params.properties",
    "gerrit_propertiesFile=/auto/sw_system_release/ci/general/ngci_properties_v2/gerrit_git-nbu-sw.properties",
    "build_propertiesFile=build/common/build.properties",
    "PIPELINE_FORCE_CLEAN=true",
    "PRIORITY_NUMBER=4",
    "TARBALL_NAME=SONIC_MGMT_TAR.db.1.tgz",
    "OFFICIAL_TESTS=SONIC_MGMT"
  ],
  "phases": [
    {
      "phase_1": [
        {
          "name": "Pre Gerrit Validation",
          "module": "com.mellanox.jenkins.generic_modules.GerritValidation",
          "category": "Pre Build Check",
          "parameters": {
            "BRANCH_LOCK_CHECK": "${BRANCH_LOCK_CHECK}",
            "RELATED_CHANGES": "${RELATED_CHANGES}",
            "COMMIT_MSG_MANDATORY_WORDS": "${COMMIT_MSG_MANDATORY_WORDS}"
          },
          "node": "SONIC_LITE",
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        }
      ]
    },
    {
      "phase_2": [
        {
          "name": "Clone",
          "module": "com.mellanox.jenkins.generic_modules.Checkout",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {
            "CLONE_PATH": "${PROJECT_NAME}",
            "GIT_REPOSITORY": "${GIT_REPOSITORY}"
          },
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Components Match",
          "module": "com.mellanox.jenkins.generic_modules.ComponentMatch",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {
            "MAP_FILE": "${PROJECT_NAME}/build/ci/file_mapping.yaml",
            "VERBOSE": true
          },
          "skip": false,
          "on_failure": "stop"
        },
        {
          "name": "Validation",
          "module": "build/ci/pre_ci_validation.groovy",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {},
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Check SIMX compatibility",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/release/simx_compatibility.groovy",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {
            "readme_folder" : "${README_PATH}"
          },
          "skip": "${SKIP_SIMX}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "parallel_build": [
            {
              "name": "Beautify",
              "module": "com.mellanox.jenkins.generic_modules.Beautify",
              "category": "Pre BAT",
              "node": "SONIC_LITE",
              "parameters": {
                "beautifier_params": "--ignore build/ci/config/beautify/beautifier_ignore_list.txt --config build/ci/config/beautify"
              },
              "skip": "${SKIP_BEAUTIFIER}",
              "on_failure": "stop"
            },
            {
              "name": "Spell Check",
              "module": "com.mellanox.jenkins.generic_modules.SpellCheck",
              "category": "Pre BAT",
              "node": "SONIC_LITE",
              "parameters": {
                "create_dictionary": "/auto/sw_system_project/tools/aspell_exceptions",
                "spell_check_params": "--dictionary-list sonic-mgmt,generic --ignore build/ci/config/spellcheck/spellcheck_ignore_list.txt"
              },
              "skip": "${SKIP_SPELLCHECK}",
              "on_failure": "stop"
            }
          ]
        },
        {
          "name": "Handle Components Match",
          "module": "${nfs_dir}/build/ci/handle_component.groovy",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {},
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "Create tarball",
          "module": "com.mellanox.jenkins.generic_modules.RunCmd",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {
            "cmd": "cd ${nfs_dir}; tar -zcvf ${nfs_dir}/${TARBALL_NAME} sonic-mgmt"
          },
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        }
      ]
    },
    {
      "phase_3": [
        {
          "name": "Allocate setup SPC Community",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@COMMUNITY_SPC",
          "parameters": {
            "queue_id": "devops_sonic_ci_community_spc",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_COMMUNITY_SPC",
            "setup_var": "CI_SONIC_COMMUNITY_SPC_SETUP",
            "device_var": "SWITCH_PANTHER1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_COMMUNITY_REGRESSION}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SPC",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SPC",
          "parameters": {
            "queue_id": "devops_sonic_ci_spc",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SPC",
            "setup_var": "CI_SONIC_SPC_SETUP",
            "device_var": "SWITCH_PANTHER1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_HW_SPC_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SPC2",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SPC2",
          "parameters": {
            "queue_id": "devops_sonic_ci_spc2",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SPC2",
            "setup_var": "CI_SONIC_SPC2_SETUP",
            "device_var": "SWITCH_ANACONDA1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_HW_SPC2_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SPC3",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SPC3",
          "parameters": {
            "queue_id": "devops_sonic_ci_spc3",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SPC3",
            "setup_var": "CI_SONIC_SPC3_SETUP",
            "device_var": "SWITCH_LEOPARD1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_HW_SPC3_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SPC4",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SPC4",
          "parameters": {
            "queue_id": "devops_sonic_ci_spc4",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SPC4",
            "setup_var": "CI_SONIC_SPC4_SETUP",
            "device_var": "SWITCH_MOOSE1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SIMX SPC",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SIMX_SPC",
          "parameters": {
            "queue_id": "devops_sonic_ci_simx_spc",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SIMX_SPC",
            "setup_var": "CI_SONIC_SIMX_SPC_SETUP",
            "device_var": "SWITCH_PANTHER1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_SIMX_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC_BAT}",
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SIMX SPC2",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SIMX_SPC2",
          "parameters": {
            "queue_id": "devops_sonic_ci_simx_spc2",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SIMX_SPC2",
            "setup_var": "CI_SONIC_SIMX_SPC2_SETUP",
            "device_var": "SWITCH_ANACONDA1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_SIMX_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC2_BAT}",
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SIMX SPC3",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SIMX_SPC3",
          "parameters": {
            "queue_id": "devops_sonic_ci_simx_spc3",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SIMX_SPC3",
            "setup_var": "CI_SONIC_SIMX_SPC3_SETUP",
            "device_var": "SWITCH_LEOPARD1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_SIMX_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC3_BAT}",
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup SIMX SPC4",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@SIMX_SPC4",
          "parameters": {
            "queue_id": "devops_sonic_ci_simx_spc4",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_SIMX_SPC4",
            "setup_var": "CI_SONIC_SIMX_SPC4_SETUP",
            "device_var": "SWITCH_MOOSE1",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_SIMX_CI,setup_status:enable"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC4_BAT}",
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup QTM2",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@QTM2",
          "parameters": {
            "queue_id": "devops_nvos_ci_qtm2",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_NVOS_QTM2",
            "setup_var": "CI_NVOS_QTM2_SETUP",
            "device_var": "SWITCH_BLACKBIRD",
            "setup_requirements": "group_name:Sagi,sub_group:CI,setup_status:enable"
          },
          "skip": "${SKIP_NVOS_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Allocate setup BF3",
          "module": "com.mellanox.jenkins.generic_modules.AllocateSetups",
          "category": "Allocate setups",
          "node": "MINI_MARS@BF3",
          "parameters": {
            "queue_id": "devops_sonic_ci_bf3",
            "priority": "${PRIORITY_NUMBER}",
            "setup_type": "CI_SONIC_BF3",
            "setup_var": "CI_SONIC_BF3_SETUP",
            "device_var": "SERVER",
            "setup_requirements": "group_name:Sagi,sub_group:SONIC_CI,setup_status:enable"
          },
          "skip": "${SKIP_DPU_BAT}",
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "BAT Community SPC",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@COMMUNITY_SPC",
          "parameters": {
            "matrix_row": "ETH_COMMUNITY",
            "matrix_col": "SPC",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_COMMUNITY_SPC_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_COMMUNITY_SPC_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type": "REGRESSION",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_COMMUNITY_REGRESSION}",
          "on_failure": "stop"
        },
        {
          "name": "BAT SPC",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SPC",
          "parameters": {
            "matrix_row": "ETH",
            "matrix_col": "SPC",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SPC_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SPC_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_HW_SPC_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SPC2",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SPC2",
          "parameters": {
            "matrix_row": "ETH",
            "matrix_col": "SPC2",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SPC2_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SPC2_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_HW_SPC2_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SPC3",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SPC3",
          "parameters": {
            "matrix_row": "ETH",
            "matrix_col": "SPC3",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SPC3_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SPC3_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_HW_SPC3_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SPC4",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SPC4",
          "parameters": {
            "matrix_row": "ETH",
            "matrix_col": "SPC4",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SPC4_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SPC4_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SIMX SPC",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SIMX_SPC",
          "parameters": {
            "matrix_row": "SIMX",
            "matrix_col": "SPC",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SIMX_SPC_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SIMX_SPC_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SIMX SPC2",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SIMX_SPC2",
          "parameters": {
            "matrix_row": "SIMX",
            "matrix_col": "SPC2",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SIMX_SPC2_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SIMX_SPC2_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC2_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SIMX SPC3",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SIMX_SPC3",
          "parameters": {
            "matrix_row": "SIMX",
            "matrix_col": "SPC3",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SIMX_SPC3_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SIMX_SPC3_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC3_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT SIMX SPC4",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@SIMX_SPC4",
          "parameters": {
            "matrix_row": "SIMX",
            "matrix_col": "SPC4",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_SIMX_SPC4_SETUP}",
            "setup_conf_file_path": "${MARS_CONF_BASE}/${CI_SONIC_SIMX_SPC4_SETUP}/",
            "base_version": "${SONIC_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC4_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT QTM2",
          "module": "/auto/sw_system_release/ci/nos/nvos/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@QTM2",
          "parameters": {
            "matrix_row": "IB",
            "matrix_col": "QTM2",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_NVOS_QTM2_SETUP}",
            "setup_conf_file_path": "/auto/sysgwork/G/MARS_conf/stm_10_7_225_113/setups/${CI_NVOS_QTM2_SETUP}/",
            "target_version": "${NVOS_BIN}",
            "base_version": "${NVOS_BIN}",
            "custom_tarball_name": "${nfs_dir}/${TARBALL_NAME}"
          },
          "skip": "${SKIP_NVOS_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "BAT BF3",
          "module": "/auto/sw_system_release/ci/sonic_devops/build/ci/bat.groovy",
          "category": "BAT",
          "node": "MINI_MARS@BF3",
          "parameters": {
            "matrix_row": "DPU",
            "matrix_col": "BF3",
            "global_conf": "${MARS_GLOBAL_CONF}",
            "setup_id": "${CI_SONIC_BF3_SETUP}",
            "setup_conf_file_path": "/auto/sw_regression/system/SONIC/MARS/conf/setups/${CI_SONIC_BF3_SETUP}/",
            "base_version": "${DPU_BIN}",
            "test_type" : "CI",
            "sonic_mgmt_repo_url": "${nfs_dir}"
          },
          "skip": "${SKIP_DPU_BAT}",
          "on_failure": "stop",
          "out_of_mail": false
        },
        {
          "name": "Free community setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@COMMUNITY_SPC",
          "parameters": {
            "setup_name": "${CI_SONIC_COMMUNITY_SPC_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SPC setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SPC",
          "parameters": {
            "setup_name": "${CI_SONIC_SPC_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SPC2 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SPC2",
          "parameters": {
            "setup_name": "${CI_SONIC_SPC2_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SPC3 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SPC3",
          "parameters": {
            "setup_name": "${CI_SONIC_SPC3_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SPC4 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SPC4",
          "parameters": {
            "setup_name": "${CI_SONIC_SPC4_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SIMX SPC setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SIMX_SPC",
          "parameters": {
            "setup_name": "${CI_SONIC_SIMX_SPC_SETUP}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC_BAT}",
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SIMX SPC2 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SIMX_SPC2",
          "parameters": {
            "setup_name": "${CI_SONIC_SIMX_SPC2_SETUP}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC2_BAT}",
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SIMX SPC3 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SIMX_SPC3",
          "parameters": {
            "setup_name": "${CI_SONIC_SIMX_SPC3_SETUP}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC3_BAT}",
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free SIMX SPC4 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@SIMX_SPC4",
          "parameters": {
            "setup_name": "${CI_SONIC_SIMX_SPC4_SETUP}"
          },
          "skip": "${SKIP_SONIC_SIMX_SPC4_BAT}",
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free QTM2 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@QTM2",
          "parameters": {
            "setup_name": "${CI_NVOS_QTM2_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        },
        {
          "name": "Free BF3 setup",
          "module": "com.mellanox.jenkins.generic_modules.FreeSetup",
          "category": "Clean",
          "node": "MINI_MARS@BF3",
          "parameters": {
            "setup_name": "${CI_SONIC_BF3_SETUP}"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        }
      ]
    },
    {
      "phase_4": [
        {
          "name": "Create Tests Matrix",
          "module": "com.mellanox.jenkins.generic_modules.CreateTestsMatrix",
          "category": "Create Tests Matrix",
          "node": "SONIC_LITE",
          "parameters": {
            "EXPECTED_RESULTS": [
              {
                "ETH": [
                  "SPC",
                  "SPC2",
                  "SPC3",
                  "SPC4"
                ]
              },
              {
                "SIMX": [
                  "SPC",
                  "SPC2",
                  "SPC3",
                  "SPC4"
                ]
              },
              {
                "ETH_COMMUNITY": [
                  "SPC"
                ]
              },
              {
                "IB": [
                  "QTM2"
                ]
              },
              {
                "DPU": [
                  "BF3"
                ]
              }
            ]
          },
          "skip": false,
          "on_failure": "ignore",
          "out_of_mail": true,
          "finally": true
        },
        {
          "name": "Gerrit Update",
          "module": "com.mellanox.jenkins.generic_modules.GerritVerification",
          "category": "Gerrit Update",
          "parameters": {
            "RELATED_CHANGES": "${RELATED_CHANGES}"
          },
          "node": "SONIC_LITE",
          "skip": false,
          "on_failure": "stop",
          "finally": true
        },
        {
          "name": "Gerrit Validation",
          "module": "com.mellanox.jenkins.generic_modules.GerritValidation",
          "category": "Merge",
          "parameters": {
            "BRANCH_LOCK_CHECK": "${BRANCH_LOCK_CHECK}",
            "RELATED_CHANGES": "${RELATED_CHANGES}"
          },
          "node": "SONIC_LITE",
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "Merge",
          "module": "com.mellanox.jenkins.generic_modules.Merge",
          "category": "Merge",
          "parameters": {},
          "node": "SONIC_LITE",
          "skip": false,
          "on_failure": "stop"
        },
        {
          "name": "Create tarball after merge",
          "module": "com.mellanox.jenkins.generic_modules.RunCmd",
          "category": "Pre BAT",
          "node": "SONIC_LITE",
          "parameters": {
            "cmd": "cd ${nfs_dir}; tar -zcvf ${nfs_dir}/${TARBALL_NAME} sonic-mgmt"
          },
          "skip": false,
          "on_failure": "stop",
          "out_of_mail": true
        },
        {
          "name": "move tarball to shared directory",
          "module": "com.mellanox.jenkins.generic_modules.RunCmd",
          "category": "Move Tarball",
          "node": "SONIC_LITE",
          "parameters": {
            "cmd": "sudo cp -f ${nfs_dir}/${TARBALL_NAME} /.autodirect/sw_regression/system/SONIC/MARS/tarballs/SONIC_CANONICAL-sonic-mgmt_${GERRIT_BRANCH}.db.1.tgz"
          },
          "skip": false,
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "move tarball to mtbc shared directory",
          "module": "com.mellanox.jenkins.generic_modules.RunCmd",
          "category": "Move Tarball",
          "node": "SONIC_LITE",
          "parameters": {
            "cmd": "timeout 300 sudo scp ${nfs_dir}/${TARBALL_NAME} root@mtbc-stm-003:/auto/sw_regression/mtbcsw/system/SONIC/MARS/tarballs/SONIC_CANONICAL-sonic-mgmt_${GERRIT_BRANCH}.db.1.tgz"
          },
          "skip": false,
          "on_failure": "continue",
          "out_of_mail": true
        },
        {
          "name": "Clean env",
          "module": "com.mellanox.jenkins.generic_modules.RunCmd",
          "category": "Clean env",
          "node": "SONIC_LITE",
          "parameters": {
            "cmd": "if [[ -d ${nfs_dir} ]] ; then find ${nfs_dir}/* -maxdepth 0 ! -name 'LOGS' -exec rm -rf {} +; fi"
          },
          "skip": false,
          "finally": true,
          "on_failure": "ignore",
          "out_of_mail": true
        }
      ]
    }
  ]
}
