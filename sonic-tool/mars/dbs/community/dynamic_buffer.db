<?xml version="1.0" encoding="UTF-8"?>
<DBDEF>
	<global>
		<!-- parameters passed to setup steps commands-->
		<default_params_type> basic_setup_step_params </default_params_type>
		<DB>
			<info> Dynamic Buffer Calculation </info>
			<owner> SONiC </owner>
			<group> SONiC </group>

			<!-- OPTIONAL TAGS -->
			<tags> QOS </tags>

			<!-- pre db commands - executed once before DB run -->
			<pre>
			</pre>
			<pre>
                		<info> check configured topology </info>
                		<type> reg_exec_cmd </type>
                		<name> check configured topology </name>
                		<tout> 30 </tout>
                		<ignore_pre_fail> True </ignore_pre_fail>
                		<run_posts_after_pre_failed> True </run_posts_after_pre_failed>
                		<params>
					<exec> test [[conf:extra_info.topology]] = ptf32 </exec>
                		</params>

                		<on_failure>
					<cmd>
                        			<info> remove configured topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> remove configured topology </name>
                        			<tout> 600 </tout>
                        			<params>
							<exec> ./testbed-cli.sh -k ceos remove-topo [[conf:extra_info.dut_name]]-[[conf:extra_info.topology]] vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
					</cmd>
					<cmd>
                        			<info> add required topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> add required topology </name>
                        			<tout> 1800 </tout>
                        			<params>
							<exec> ./testbed-cli.sh -k ceos add-topo [[conf:extra_info.dut_name]]-ptf32 vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
					</cmd>
					<cmd>
                        			<info> deploy minigraph of required topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> deploy minigraph of required topology </name>
                        			<tout> 1200 </tout>
                        			<params>
							<exec> ./testbed-cli.sh deploy-mg [[conf:extra_info.dut_name]]-ptf32 lab vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
					</cmd>
                		</on_failure>
            		</pre>


			<post>
                		<info> check configured topology </info>
                		<type> reg_exec_cmd </type>
                		<name> check configured topology </name>
                		<tout> 30 </tout>
                		<params>
					<exec> test [[conf:extra_info.topology]] = ptf32 </exec>
                		</params>

                		<on_failure>
					<cmd>
                        			<info> remove required topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> remove required topology </name>
                        			<tout> 600 </tout>
                        			<params>
							<exec> ./testbed-cli.sh -k ceos remove-topo [[conf:extra_info.dut_name]]-ptf32 vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
                    			</cmd>
                    			<cmd>
                        			<info> add configured topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> add configured topology </name>
                        			<tout> 1800 </tout>
                        			<params>
							<exec> ./testbed-cli.sh -k ceos add-topo [[conf:extra_info.dut_name]]-[[conf:extra_info.topology]] vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
					</cmd>
					<cmd>
                        			<info> deploy minigraph of configured topology </info>
                        			<type> reg_exec_cmd </type>
                        			<name> deploy minigraph of configured topology </name>
                        			<tout> 1200 </tout>
                        			<params>
							<exec> ./testbed-cli.sh deploy-mg [[conf:extra_info.dut_name]]-[[conf:extra_info.topology]] lab vault </exec>
							<cmd_workdir> /root/mars/workspace/[[conf:extra_info.sonic_mgmt_repo_name]]/ansible </cmd_workdir>
                        			</params>
					</cmd>
				</on_failure>
			</post>
			<post></post>
		</DB>
		<Test>
			<!--Must reset any dynamic ignore tags created by other tests-->
			<pre>
	            <type> reg_exec_func </type>
				<name> reset dynamic ignore tags </name>
				<mars_cmd_func> reset_dynamic_tags </mars_cmd_func>
				<tout> 60 </tout>
				<params>
					<tags_type> ignore_tags </tags_type>
				</params>
			</pre>
			<pre>
				<type> reg_exec_func </type>
				<name> pre-test check </name>
			<mars_cmd_func> run_on_stm </mars_cmd_func>
				<tout> 300 </tout>
				<params>
					<cmd> /root/pyenv/sonic/bin/python -E [[conf:execution_blocks.B_ID1.local_src_path]]/sonic-mgmt/sonic-tool/mars/scripts/pre_test_check.py </cmd>
					<cmd_params> --topo [[conf:topology_file]] --test-name [[run_time:test_name]] --sonic-topo [[conf:extra_info.topology]] --workspace-path /root/mars/workspace --repo-name [[conf:extra_info.sonic_mgmt_repo_name]] </cmd_params>
				</params>
			</pre>
			<post>
			</post>
		</Test>
		<Case>
			<!-- OPTIONAL TAGS -->
			<!--<tags> TAG NAME</tags>-->
			<pre></pre>
			<ignore>
				<ignore_by_tag> TAG_TOPOLOGY_NOT_APPLICABLE </ignore_by_tag>
			</ignore>
			<post></post>
		</Case>
	</global>

    <test>
        <cases> sonic-mgmt/sonic-tool/mars/cases/community/dynamic_buffer_calculation.cases </cases>
    </test>

    <test>
        <cases> sonic-mgmt/sonic-tool/mars/cases/community/dynamic_buffer_calculation_shp.cases </cases>
    </test>

</DBDEF>
